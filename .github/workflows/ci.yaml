name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    name: Build and test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-18.04' ]
        elixir: [ '1.11.x' ]
        otp: [ '23.x' ]

    services:
      db:
        image: postgres:latest
        ports: [ '5433:5432' ]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Build cache
      uses: actions/cache@v2
      with:
        path: _build
        key: build-${{ matrix.os }}-${{ hashFiles('lib/**/*.ex*') }}
        restore-keys: |
          build-${{ matrix.os }}-
    - name: Dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: mix-${{ matrix.os }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: mix-${{ matrix.os }}-

    - name: Dialyzer PLT cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: priv/plts
        key: plt-${{ matrix.os }}-elixir${{ matrix.elixir }}-otp${{ matrix.otp }}-${{ hashFiles('lib/**/*.ex*') }}
        restore-keys: |
          plt-${{ matrix.os }}-elixir${{ matrix.elixir }}-otp${{ matrix.otp }}-
    - name: Install dependencies
      run: mix deps.get

    - name: Check dependencies
      run: mix deps.unlock --check-unused

    - name: Check formatting
      run: mix format --check-formatted

    - name: Compile dependencies
      run: mix deps.compile

    - name: Compile dev
      run: mix compile --warnings-as-errors

    - name: Run Credo
      run: mix credo

    - name: Compile test
      run: mix compile --warnings-as-errors
      env:
        MIX_ENV: test

    - name: Run tests
      run: mix test

    - name: Create Dialyzer PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    - name: Run Dialyzer
      run: mix dialyzer --no-check
